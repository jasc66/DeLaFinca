{"version":3,"sources":["accesibilidad.js","app.js","carrito.js","contacto.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["let currentFontSize = 16;\n\nwindow.toggleContrast = function() {\n    document.body.classList.toggle('high-contrast');\n};\n\nwindow.increaseFontSize = function() {\n    currentFontSize += 2;\n    document.body.style.fontSize = currentFontSize + 'px';\n};\n\nwindow.decreaseFontSize = function() {\n    if (currentFontSize > 12) {\n        currentFontSize -= 2;\n        document.body.style.fontSize = currentFontSize + 'px';\n    }\n};\n\nwindow.resetStyles = function() {\n    document.body.style.fontSize = '16px';\n    document.body.classList.remove('high-contrast', 'light-mode', 'dark-mode');\n    currentFontSize = 16;\n};\n\nwindow.changeToLight = function() {\n    document.body.classList.remove('dark-mode');\n    document.body.classList.add('light-mode');\n};\n\nwindow.changeToDark = function() {\n    document.body.classList.remove('light-mode');\n    document.body.classList.add('dark-mode');\n};\n","document.addEventListener('DOMContentLoaded', function () {\n    // Cargar el header dinámicamente\n    fetch('src/partials/header.html')\n        .then(response => response.text())\n        .then(data => {\n            const headerContainer = document.getElementById('header');\n            if (headerContainer) {\n                headerContainer.innerHTML = data;\n\n                // Obtener el valor de data-header para cambiar la clase y el texto\n                const headerElement = document.querySelector('#header');\n                const pageType = headerElement ? headerElement.getAttribute('data-header') : null;\n\n                if (pageType) {\n                    // Asignar la clase específica al header\n                    headerElement.classList.add(`header-${pageType}`);\n\n                    // Cambiar el texto del h1 basado en la página\n                    const textoHeader = document.querySelector('.texto-header h1');\n                    if (textoHeader) {\n                        switch (pageType) {\n                            case 'inicio':\n                                textoHeader.textContent = 'Descubre una experiencia culinaria inolvidable';\n                                break;\n                            case 'nosotros':\n                                textoHeader.textContent = 'Conoce nuestra historia y pasión por la gastronomía';\n                                break;\n                            case 'proceso':\n                                textoHeader.textContent = 'Nuestro proceso: del campo a tu mesa';\n                                break;\n                            case 'menu':\n                                textoHeader.textContent = 'Explora nuestro delicioso menú';\n                                break;\n                            case 'galeria':\n                                textoHeader.textContent = 'Una galería de sabores y experiencias';\n                                break;\n                            case 'contacto':\n                                textoHeader.textContent = 'Contáctanos para una experiencia personalizada';\n                                break;\n                            default:\n                                textoHeader.textContent = 'Bienvenido a De La Finca';\n                        }\n                    }\n                } else {\n                    console.error('No se encontró el atributo data-header en el header.');\n                }\n\n                // Configurar el menú hamburguesa\n                const menuHamburguesa = document.querySelector('.menu-hamburguesa');\n                const navPrincipal = document.querySelector('.nav-principal');\n\n                if (menuHamburguesa && navPrincipal) {\n                    menuHamburguesa.addEventListener('click', function () {\n                        navPrincipal.classList.toggle('activo');\n                        menuHamburguesa.classList.toggle('active');\n                    });\n                } else {\n                    console.error('No se encontró el menú hamburguesa o la navegación principal.');\n                }\n\n                // Ahora que el header ha sido cargado, ejecutamos las funcionalidades del carrito\n                iniciarCarrito();\n            } else {\n                console.error('No se encontró el elemento con id=\"header\"');\n            }\n        })\n        .catch(error => console.error('Error cargando el header:', error));\n\n    // Cargar el footer dinámicamente\n    fetch('src/partials/footer.html')\n        .then(response => response.text())\n        .then(data => {\n            const footerElement = document.getElementById('footer');\n            if (footerElement) {\n                footerElement.innerHTML = data;\n            } else {\n                console.error('No se encontró el elemento con id=\"footer\"');\n            }\n        })\n        .catch(error => console.error('Error cargando el footer:', error));\n});\n\nfunction iniciarCarrito() {\n    let carrito = [];\n    let platoActual = ''; // Almacenar temporalmente el plato que se selecciona\n\n    // Función para abrir el modal y seleccionar cantidad\n    document.querySelectorAll('.agregar-carrito').forEach(boton => {\n        boton.addEventListener('click', function () {\n            platoActual = this.dataset.plato;\n            document.getElementById('platoSeleccionado').textContent = platoActual;\n            document.getElementById('modalCarrito').style.display = 'block';\n        });\n    });\n\n    // Cerrar modal de carrito\n    const cerrarModalCarrito = document.getElementById('cerrarModalCarrito');\n    if (cerrarModalCarrito) {\n        cerrarModalCarrito.addEventListener('click', function () {\n            document.getElementById('modalCarrito').style.display = 'none';\n        });\n    }\n\n    // Confirmar agregar al carrito\n    const confirmarAgregar = document.getElementById('confirmarAgregar');\n    if (confirmarAgregar) {\n        confirmarAgregar.addEventListener('click', function () {\n            const cantidad = document.getElementById('cantidadPlato').value;\n            // Validar que la cantidad sea mayor a 0\n            if (cantidad > 0) {\n                carrito.push({ plato: platoActual, cantidad });\n                document.getElementById('modalCarrito').style.display = 'none';\n                mostrarCarrito();\n                guardarCarritoEnLocalStorage(); // Guardar en localStorage después de agregar al carrito\n                actualizarContadorCarrito(); // Actualizar el contador del carrito\n            } else {\n                alert('La cantidad debe ser mayor que 0');\n            }\n        });\n    }\n\n    // Mostrar los platos seleccionados en el carrito\n    function mostrarCarrito() {\n        const carritoSeleccionados = document.getElementById('carritoSeleccionados');\n        if (carritoSeleccionados) {\n            carritoSeleccionados.innerHTML = ''; // Limpiar el carrito antes de actualizar\n\n            carrito.forEach((item, index) => {\n                const div = document.createElement('div');\n                div.innerHTML = `\n                    ${item.cantidad} x ${item.plato} \n                    <button onclick=\"eliminarDelCarrito(${index})\">Eliminar</button>`;\n                carritoSeleccionados.appendChild(div);\n            });\n        }\n    }\n\n    // Eliminar plato del carrito\n    function eliminarDelCarrito(index) {\n        carrito.splice(index, 1);\n        mostrarCarrito();\n        guardarCarritoEnLocalStorage();\n        actualizarContadorCarrito();\n    }\n\n    // Guardar en localStorage\n    function guardarCarritoEnLocalStorage() {\n        localStorage.setItem('carrito', JSON.stringify(carrito));\n    }\n\n    // Cargar carrito desde localStorage\n    function cargarCarrito() {\n        carrito = JSON.parse(localStorage.getItem('carrito')) || [];\n        mostrarCarrito();\n        actualizarContadorCarrito();\n    }\n\n    // Actualizar el número de ítems en el carrito\n    function actualizarContadorCarrito() {\n        const contadorCarrito = document.getElementById('contadorCarrito');\n        if (contadorCarrito) {\n            contadorCarrito.textContent = carrito.length;\n        }\n    }\n\n    // Evento para desplegar el menú del carrito\n    const iconoCarrito = document.getElementById('iconoCarrito');\n    const carritoDesplegable = document.getElementById('carritoDesplegable');\n\n    // Verificar el estado del carrito en localStorage\n    const estadoCarrito = localStorage.getItem('carritoAbierto') === 'true';\n\n    // Establecer el estado inicial del carrito\n    if (estadoCarrito) {\n        carritoDesplegable.style.display = 'block';\n    } else {\n        carritoDesplegable.style.display = 'none';\n    }\n\n    if (iconoCarrito) {\n        iconoCarrito.addEventListener('click', function (event) {\n            event.preventDefault();\n            const nuevoEstado = carritoDesplegable.style.display === 'none' ? 'block' : 'none';\n            carritoDesplegable.style.display = nuevoEstado;\n\n            // Guardar el estado del carrito en el localStorage\n            localStorage.setItem('carritoAbierto', nuevoEstado === 'block');\n        });\n    }\n\n    // Cerrar el menú desplegable si se hace clic fuera de él\n    document.addEventListener('click', function (event) {\n        if (iconoCarrito && carritoDesplegable && !iconoCarrito.contains(event.target) && !carritoDesplegable.contains(event.target)) {\n            carritoDesplegable.style.display = 'none';\n            // Guardar el estado cerrado del carrito\n            localStorage.setItem('carritoAbierto', false);\n        }\n    });\n\n    // Cargar el carrito cuando la página esté lista\n    cargarCarrito();\n}\n","let carrito = [];\nlet platoActual = ''; // Almacenar temporalmente el plato que se selecciona\n\n// Función para abrir el modal y seleccionar cantidad\ndocument.querySelectorAll('.agregar-carrito').forEach(boton => {\n    boton.addEventListener('click', function() {\n        platoActual = this.dataset.plato;\n        document.getElementById('platoSeleccionado').textContent = platoActual;\n        document.getElementById('modalCarrito').style.display = 'block';\n    });\n});\n\n// Cerrar modal de carrito\nconst cerrarModalCarrito = document.getElementById('cerrarModalCarrito');\nif (cerrarModalCarrito) {\n    cerrarModalCarrito.addEventListener('click', function() {\n        document.getElementById('modalCarrito').style.display = 'none';\n    });\n}\n\n// Confirmar agregar al carrito\nconst confirmarAgregar = document.getElementById('confirmarAgregar');\nif (confirmarAgregar) {\n    confirmarAgregar.addEventListener('click', function() {\n        const cantidad = document.getElementById('cantidadPlato').value;\n        // Validar que la cantidad sea mayor a 0\n        if (cantidad > 0) {\n            carrito.push({ plato: platoActual, cantidad });\n            document.getElementById('modalCarrito').style.display = 'none';\n            mostrarCarrito();\n            guardarCarritoEnLocalStorage(); // Guardar en localStorage después de agregar al carrito\n            actualizarContadorCarrito(); // Actualizar el contador del carrito\n        } else {\n            alert('La cantidad debe ser mayor que 0');\n        }\n    });\n}\n\n// Función para mostrar los platos seleccionados en el carrito sin precio\nfunction mostrarCarrito() {\n    const carritoSeleccionados = document.getElementById('carritoSeleccionados');\n    if (carritoSeleccionados) {\n        carritoSeleccionados.innerHTML = ''; // Limpiar el carrito antes de actualizar\n\n        carrito.forEach((item, index) => {\n            const div = document.createElement('div');\n            div.innerHTML = `\n                ${item.cantidad} x ${item.plato} \n                <button onclick=\"eliminarDelCarrito(${index})\">Eliminar</button>`;\n            carritoSeleccionados.appendChild(div);\n        });\n    }\n}\n\n// Función para eliminar un plato del carrito\nfunction eliminarDelCarrito(index) {\n    carrito.splice(index, 1);\n    mostrarCarrito();\n    guardarCarritoEnLocalStorage(); // Actualizar localStorage después de eliminar\n    actualizarContadorCarrito(); // Actualizar el contador del carrito después de eliminar\n}\n\n// Guardar el carrito en localStorage\nfunction guardarCarritoEnLocalStorage() {\n    localStorage.setItem('carrito', JSON.stringify(carrito));\n}\n\n// Función para cargar y mostrar el carrito desde localStorage\nfunction cargarCarrito() {\n    const carritoSeleccionados = document.getElementById('carritoSeleccionados');\n    carrito = JSON.parse(localStorage.getItem('carrito')) || []; // Obtener el carrito desde localStorage\n\n    if (carritoSeleccionados) {\n        carritoSeleccionados.innerHTML = ''; // Limpiar el contenido previo\n        carrito.forEach((item, index) => {  \n            const p = document.createElement('div');\n            p.innerHTML = `\n                ${item.cantidad} x ${item.plato}\n                <button onclick=\"eliminarDelCarrito(${index})\">Eliminar</button>`;\n            carritoSeleccionados.appendChild(p);\n        });\n    }\n    actualizarContadorCarrito(); // Actualizar el contador del carrito al cargar\n}\n\n// Función para actualizar el número de ítems en el carrito\nfunction actualizarContadorCarrito() {\n    const contadorCarrito = document.getElementById('contadorCarrito');\n    if (contadorCarrito) {\n        contadorCarrito.textContent = carrito.length;\n    }\n}\n\n// Cargar el carrito al cargar la página\ndocument.addEventListener('DOMContentLoaded', cargarCarrito);\n\n// ----------------- NUEVAS FUNCIONALIDADES PARA ÍCONO Y MODAL DE CARRITO -------------------\n\n// Referencias al icono y al modal de carrito\nconst iconoCarrito = document.getElementById('iconoCarrito');\nconst modalVerCarrito = document.getElementById('modalVerCarrito');\nconst cerrarModalVerCarrito = document.getElementById('cerrarModalVerCarrito');\nconst listaCarrito = document.getElementById('listaCarrito');\n\n// Verificamos si el icono del carrito existe antes de agregar el evento\nif (iconoCarrito) {\n    // Evento para abrir el modal al hacer clic en el icono del carrito\n    iconoCarrito.addEventListener('click', function (event) {\n        event.preventDefault(); // Evita que el enlace navegue\n        mostrarCarritoEnModal(); // Mostrar el contenido del carrito en el modal\n        modalVerCarrito.style.display = 'block'; // Mostrar el modal\n    });\n}\n\n// Evento para cerrar el modal\nif (cerrarModalVerCarrito) {\n    cerrarModalVerCarrito.addEventListener('click', function () {\n        modalVerCarrito.style.display = 'none'; // Ocultar el modal\n    });\n}\n\n// Mostrar el contenido del carrito en el modal sin precio\nfunction mostrarCarritoEnModal() {\n    listaCarrito.innerHTML = ''; // Limpiar antes de mostrar\n    if (carrito.length === 0) {\n        listaCarrito.innerHTML = '<p>Tu carrito está vacío</p>';\n    } else {\n        carrito.forEach((item, index) => {\n            const div = document.createElement('div');\n            div.innerHTML = `\n                ${item.cantidad} x ${item.plato}\n                <button onclick=\"eliminarDelCarrito(${index}); mostrarCarritoEnModal();\">Eliminar</button>`;\n            listaCarrito.appendChild(div);\n        });\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Asegúrate de que el botón existe antes de agregar el event listener\n    document.addEventListener('click', function() {\n        const confirmarCompra = document.getElementById('confirmarCompra');\n        \n        if (confirmarCompra) {\n            confirmarCompra.addEventListener('click', function() {\n                console.log(\"Botón Confirmar Compra presionado\");\n                // Redirigir a la página de contacto\n                window.location.href = 'contacto.html';\n            });\n        } else {\n            console.error(\"El botón confirmarCompra no fue encontrado\");\n        }\n    });\n});\n","// Verificar si el formulario de reserva está presente\nconst formularioReserva = document.getElementById('formularioReserva');\nif (formularioReserva) {\n    formularioReserva.addEventListener('submit', function(event) {\n        event.preventDefault();  // Evita el envío normal del formulario\n\n        // Capturar los datos del formulario\n        var nombre = document.getElementById('nombre').value;\n        var telefono = document.getElementById('telefono').value;\n        var personas = document.getElementById('personas').value;\n        var hora = document.getElementById('hora').value;\n        var fecha = document.getElementById('fecha').value;\n        var tipo = document.getElementById('tipo').value;\n        var notas = document.getElementById('notas').value;\n\n        // Validación del horario según el día de la semana\n        var fechaSeleccionada = new Date(fecha);\n        var diaSemana = fechaSeleccionada.getUTCDay(); // 0 = Domingo, 1 = Lunes, ..., 6 = Sábado\n        var horaSeleccionada = parseInt(hora.replace(\":\", \"\"), 10); // Convertir hora a entero para comparar\n        \n        // Definir horarios permitidos\n        var horarioMinLunVie = 1200; // 12:00 PM\n        var horarioMaxLunVie = 2200; // 10:00 PM\n        var horarioMinSabado = 1700; // 5:00 PM\n        var horarioMaxSabado = 2200; // 10:00 PM\n\n        var mensajeError = '';\n\n        if (diaSemana >= 1 && diaSemana <= 5) { // Lunes a Viernes\n            if (horaSeleccionada < horarioMinLunVie || horaSeleccionada > horarioMaxLunVie) {\n                mensajeError = \"El horario de reserva de lunes a viernes es de 12:00 PM a 10:00 PM.\";\n            }\n        } else if (diaSemana == 6) { // Sábado\n            if (horaSeleccionada < horarioMinSabado || horaSeleccionada > horarioMaxSabado) {\n                mensajeError = \"El horario de reserva el sábado es de 5:00 PM a 10:00 PM.\";\n            }\n        } else {\n            mensajeError = \"El restaurante no acepta reservas los domingos.\";\n        }\n\n        // Mostrar error si existe\n        if (mensajeError) {\n            document.getElementById('mensajeHorario').innerText = mensajeError;\n            document.getElementById('modalHorario').style.display = 'block';\n            return;\n        }\n\n        // Crear el mensaje del carrito sin precio\n        let carrito = JSON.parse(localStorage.getItem('carrito')) || [];\n        let mensajeCarrito = '';\n        carrito.forEach(item => {\n            mensajeCarrito += `- ${item.cantidad} x ${item.plato}%0A`;  // Eliminamos el precio aquí\n        });\n\n        // Crear el mensaje completo para WhatsApp\n        var mensaje = `*Reserva en De La Finca*%0A` +\n                      `*Nombre:* ${nombre}%0A` +\n                      `*Teléfono:* ${telefono}%0A` +\n                      `*Número de Personas:* ${personas}%0A` +\n                      `*Hora:* ${hora}%0A` +\n                      `*Fecha:* ${fecha}%0A` +\n                      `*Tipo de Reserva:* ${tipo}%0A` +\n                      `*Platos Seleccionados:*%0A${mensajeCarrito}` +\n                      `*Notas:* ${notas}`;\n\n        // Número de teléfono del restaurante\n        var telefonoRestaurante = '87109971';  // Cambia este número por el del restaurante\n\n        // Redirigir a WhatsApp\n        var url = `https://api.whatsapp.com/send?phone=${telefonoRestaurante}&text=${mensaje}`;\n        window.open(url, '_blank');\n\n        // Limpiar el carrito después de enviar el mensaje\n        localStorage.removeItem('carrito');  // Limpiar el carrito del localStorage\n        mostrarCarrito();  // Actualizar la interfaz (vaciar el carrito)\n\n        // Mostrar el modal de confirmación\n        document.getElementById('modalConfirmacion').style.display = 'block';\n    });\n}\n\n// Cerrar el modal de confirmación\nconst cerrarModalConfirmacion = document.getElementById('cerrarModalConfirmacion');\nif (cerrarModalConfirmacion) {\n    cerrarModalConfirmacion.addEventListener('click', function() {\n        document.getElementById('modalConfirmacion').style.display = 'none';\n    });\n}\n\n// Cerrar el modal de horario\nconst cerrarModalHorario = document.getElementById('cerrarModal');\nif (cerrarModalHorario) {\n    cerrarModalHorario.addEventListener('click', function() {\n        document.getElementById('modalHorario').style.display = 'none';\n    });\n}\n"]}